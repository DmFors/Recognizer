"""
1.1 Блок Ввода/вывода
"""
from unit2 import identify


def inp_data(filename: str):
    """
    Функция считывания данных из файла.
    :param filename: имя файла, из которого считывается исходная символьная цепочка
    :return: исходная символьная цепочка
    """
    chain = ""
    return chain


def out_data(filename: str, result: str):
    """
    Функция выведения данных в файл.
    :param filename: имя файла, в который выводится результат работы распознавателя
    :param result: результат работы распознавателя
    :return:
    """
    pass


"""
1.2 Блок транслитерации
"""


def transliteration(chain: str):
    """
    Получает исходную символьную цепочку. Преобразует исходную символьную цепочку
    в цепочку лексем вида ("символ цепочки", "класс символа цепочки ").
    Классы символов цепочки: буква, цифра, пробел, плюс, минус, умножить, тчкзпт.
    :param chain: исходная символьная цепочка
    :return: список, каждый элемент которого представляет кортеж
            вида ("символ цепочки", "класс символа цепочки ")
    """
    chain_characters = []
    return chain_characters


"""
1.3 Лексический блок
"""


def to_lexemes(chain_characters: list):
    """
    Преобразует цепочку лексем, полученную от транслитератора,
    в цепочку лексем вида ("символ входного языка", "класс символа входного языка").
    :param chain_characters:список, каждый элемент которого представляет кортеж
                            вида ("символ цепочки", "класс символа цепочки ")
    :return:цепочка лексем: список, каждый элемент которого представляет кортеж
            вида ("символ входного языка", "класс символа входного языка")
    """
    # loop
    identifier = ""
    processed_identifier = identify(identifier)
    # loop
    chain_lexemes = []
    return chain_lexemes


"""
1.4 Синтаксический блок
"""


def check_the_formula(chain_lexemes: list):
    """
    Получает цепочку лексем вида ("символ входного языка", "класс символа входного языка") и
    устанавливает, соответствует ли она заданным формулам Бэкуса-Наура.
    :param chain_lexemes:список, каждый элемент которого представляет кортеж
                        вида ("символ входного языка", "класс символа входного языка").
    :return: результат работы распознавателя: строку, “ACCEPT” или “REJECT”
    """
    result = ""
    return result
